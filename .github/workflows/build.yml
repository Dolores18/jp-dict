name: Build dict server

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 🛎️ 检出代码（Checkout Repository）
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 显示提交信息
        run: |
          echo "当前提交: $(git rev-parse HEAD)"
          echo "最近提交日志:"
          git log -n 5 --oneline
          echo "修改的文件:"
          git diff --name-only HEAD~1 HEAD || true

      - name: 💾 缓存 Rust 依赖
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: 🦀 安装 Rust 工具链
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 🔧 安装构建依赖项（libsqlite3-dev）
        run: |
          echo "📦 安装系统依赖..."
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev
          echo "✅ libsqlite3-dev 安装完成"

      - name: 🔨 构建 dict server（release 模式）
        run: |
          echo "🚧 开始构建 dict server..."
          cargo build --release --bin dict
          echo "✅ 构建完成！"

      - name: 📁 显示可执行文件信息
        run: |
          echo "🎯 可执行文件信息如下："
          ls -lh target/release/dict
          file target/release/dict

      - name: 🚀 运行 API 服务测试（可选）
        run: |
          echo "🧪 启动 server 模拟运行测试（例如检查 --help）"
          ./target/release/dict --help || true

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: dict-server
          path: target/release/dict
          retention-days: 7
